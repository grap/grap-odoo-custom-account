# Copyright (C) 2015 - Today: GRAP (http://www.grap.coop)
# @author: Julien WESTE
# @author: Sylvain LE GAL (https://twitter.com/legalsylvain)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html).

import logging

from odoo import api, fields, models

_logger = logging.getLogger(__name__)


class WizardResPartnerAddExportCode(models.TransientModel):
    _name = "wizard.res.partner.add.export.code"
    _description = "Add Suffix for Partners Wizard"

    line_ids = fields.One2many(
        comodel_name="wizard.res.partner.add.export.code.line",
        inverse_name="wizard_id",
        string="Lines",
    )

    # View Section
    @api.multi
    def button_affect_suffix(self):
        for wizard in self:
            for line in wizard.line_ids.filtered(lambda x: x.ebp_suffix):
                line.partner_id.ebp_suffix = line.ebp_suffix

    # Overloading section
    @api.model
    def default_get(self, default_fields):
        ResPartner = self.env["res.partner"]

        res = super().default_get(default_fields)

        line_ids = []

        partners = ResPartner.browse(self.env.context.get("active_ids", []))

        existing_suffixes = ResPartner._get_existing_ebp_suffixes()

        for partner in partners:
            if partner.ebp_suffix:
                ebp_suffix = partner.ebp_suffix
            else:
                ebp_suffix = partner._guess_ebp_suffix(
                    existing_suffixes.get(partner.company_id.id, [])
                )
                # we add the suffix to the list of existing_suffix
                # to avoid to affect the same autogenerated suffix to
                # another partner
                if ebp_suffix:
                    existing_suffixes.setdefault(partner.company_id.id, [])
                    existing_suffixes[partner.company_id.id] += [ebp_suffix]
            line_vals = {
                "partner_id": partner.id,
                "company_id": partner.company_id.id,
                "ebp_suffix": ebp_suffix,
            }
            line_ids.append((0, 0, line_vals))
        res.update({"line_ids": line_ids})
        return res
