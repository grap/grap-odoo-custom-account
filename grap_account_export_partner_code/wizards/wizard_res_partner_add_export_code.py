# Copyright (C) 2015 - Today: GRAP (http://www.grap.coop)
# @author: Julien WESTE
# @author: Sylvain LE GAL (https://twitter.com/legalsylvain)
# License AGPL-3.0 or later (http://www.gnu.org/licenses/agpl.html).

from odoo import _, api, fields, models
from odoo.exceptions import ValidationError


class WizardResPartnerAddExportCode(models.TransientModel):
    _name = "wizard.res.partner.add.export.code"
    _description = "Add Suffix for Partners Wizard"

    line_ids = fields.One2many(
        comodel_name="wizard.res.partner.add.export.code.line",
        inverse_name="wizard_id",
        string="Lines",
    )

    # View Section
    @api.multi
    def button_affect_accounting_export_code(self):
        self.ensure_one()
        incorrect_lines = self.line_ids.filtered(lambda x: x.state != "ok")
        if incorrect_lines:
            raise ValidationError(
                _(
                    f"Unable to affect the account export code"
                    f" because {len(incorrect_lines)}"
                    f" over {len(self.line_ids)} are incorrect."
                )
            )
        for wizard in self:
            for line in wizard.line_ids.filtered(lambda x: x.accounting_export_code):
                line.partner_id.accounting_export_code = line.accounting_export_code

    # Overloading section
    @api.model
    def default_get(self, default_fields):
        ResPartner = self.env["res.partner"]

        res = super().default_get(default_fields)

        line_ids = []

        partners = ResPartner.browse(self.env.context.get("active_ids", []))

        existing_suffixes = ResPartner._get_existing_accounting_export_codes(
            company_ids=partners.mapped("company_id").ids
        )

        for partner in partners:
            if partner.accounting_export_code:
                accounting_export_code = partner.accounting_export_code
            else:
                accounting_export_code = partner._guess_accounting_export_code(
                    existing_suffixes.get(partner.company_id.id, [])
                )
                # we add the suffix to the list of existing_suffix
                # to avoid to affect the same autogenerated suffix to
                # another partner
                if accounting_export_code:
                    existing_suffixes.setdefault(partner.company_id.id, [])
                    existing_suffixes[partner.company_id.id] += [accounting_export_code]
            line_vals = {
                "partner_id": partner.id,
                "company_id": partner.company_id.id,
                "accounting_export_code": accounting_export_code,
                "state": accounting_export_code and "ok" or "empty",
            }
            line_ids.append((0, 0, line_vals))
        res.update({"line_ids": line_ids})
        return res
